{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ian.Kimble\\\\Documents\\\\Greez_DID\\\\practice21\\\\btp\\\\client\\\\pages\\\\post\\\\[postid].js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { Component } from \"react\";\nimport { Media, Card, Accordion, Container } from \"react-bootstrap\";\n\nclass article extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      postId: \"\",\n      singlePost: []\n    });\n  }\n\n  static getInitialProps({\n    query\n  }) {\n    return {\n      query\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://btpblog.herokuapp.com/tech-posts/${this.props.query.postid}`).then(res => {\n      if (res.status >= 400) {\n        throw new Error(\"could not return data\");\n      }\n\n      const data = res.data;\n      this.setState({\n        singlePost: data\n      });\n    });\n  }\n\n  render() {\n    let article = this.state.singlePost;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: article.featuredImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\" \", article.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              children: \" authored by ____ \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n              defaultActiveKey: \"0\",\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n                as: Card.Header,\n                variant: \"link\",\n                eventKey: \"1\",\n                children: [\" \", \"read more\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n                eventKey: \"1\",\n                children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: article.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, article.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this); // return <h1>{this.state.singlePost.title}</h1>;\n  }\n\n}\n\nexport default article;","map":{"version":3,"sources":["C:/Users/Ian.Kimble/Documents/Greez_DID/practice21/btp/client/pages/post/[postid].js"],"names":["axios","Component","Media","Card","Accordion","Container","article","postId","singlePost","getInitialProps","query","componentDidMount","get","props","postid","then","res","status","Error","data","setState","render","state","featuredImage","title","Header","content","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,SAAjC,QAAkD,iBAAlD;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;;AAAA,mCACtB;AACNM,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,UAAU,EAAE;AAFN,KADsB;AAAA;;AAM9B,SAAOC,eAAP,CAAuB;AAAEC,IAAAA;AAAF,GAAvB,EAAkC;AAChC,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBX,IAAAA,KAAK,CACFY,GADH,CAEK,4CAA2C,KAAKC,KAAL,CAAWH,KAAX,CAAiBI,MAAO,EAFxE,EAIGC,IAJH,CAISC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAGH,GAAG,CAACG,IAAjB;AACA,WAAKC,QAAL,CAAc;AACZZ,QAAAA,UAAU,EAAEW;AADA,OAAd;AAGD,KAZH;AAaD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAIf,OAAO,GAAG,KAAKgB,KAAL,CAAWd,UAAzB;AACA,wBACE;AAAA,6BACE,QAAC,SAAD;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,OAAO,EAAC,KAAlB;AAAwB,YAAA,GAAG,EAAEF,OAAO,CAACiB;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA,8BAAcjB,OAAO,CAACkB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAW,cAAA,gBAAgB,EAAC,GAA5B;AAAA,sCACE,QAAC,SAAD,CAAW,MAAX;AAAkB,gBAAA,EAAE,EAAErB,IAAI,CAACsB,MAA3B;AAAmC,gBAAA,OAAO,EAAC,MAA3C;AAAkD,gBAAA,QAAQ,EAAC,GAA3D;AAAA,2BACG,GADH,eAEY,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE,QAAC,SAAD,CAAW,QAAX;AAAoB,gBAAA,QAAQ,EAAC,GAA7B;AAAA,uCACE,QAAC,IAAD,CAAM,IAAN;AAAA,4BAAYnB,OAAO,CAACoB;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAWpB,OAAO,CAACqB,EAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,CAFO,CAwBP;AACD;;AAnD6B;;AAsDhC,eAAerB,OAAf","sourcesContent":["import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Media, Card, Accordion, Container } from \"react-bootstrap\";\r\n\r\nclass article extends Component {\r\n  state = {\r\n    postId: \"\",\r\n    singlePost: [],\r\n  };\r\n\r\n  static getInitialProps({ query }) {\r\n    return { query };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://btpblog.herokuapp.com/tech-posts/${this.props.query.postid}`\r\n      )\r\n      .then((res) => {\r\n        if (res.status >= 400) {\r\n          throw new Error(\"could not return data\");\r\n        }\r\n        const data = res.data;\r\n        this.setState({\r\n          singlePost: data,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let article = this.state.singlePost;\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Card key={article.id}>\r\n            <Card.Img variant=\"top\" src={article.featuredImage} />\r\n            <Card.Body>\r\n              <Card.Title> {article.title} </Card.Title>\r\n              <Card.Subtitle> authored by ____ </Card.Subtitle>\r\n              <Accordion defaultActiveKey=\"0\">\r\n                <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"1\">\r\n                  {\" \"}\r\n                  read more{\" \"}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                  <Card.Text>{article.content}</Card.Text>\r\n                </Accordion.Collapse>\r\n              </Accordion>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n    // return <h1>{this.state.singlePost.title}</h1>;\r\n  }\r\n}\r\n\r\nexport default article;\r\n"]},"metadata":{},"sourceType":"module"}