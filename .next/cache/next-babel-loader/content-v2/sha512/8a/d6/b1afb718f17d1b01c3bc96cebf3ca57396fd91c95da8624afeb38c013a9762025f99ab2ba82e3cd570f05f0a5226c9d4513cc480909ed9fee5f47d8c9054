{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/iankimble/Documents/BTP/btp_master_repo/btp.dev/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/iankimble/Documents/BTP/btp_master_repo/btp.dev/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/iankimble/Documents/BTP/btp_master_repo/btp.dev/pages/_app.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from \"../components/Layout\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useDarkMode } from \"../darkMode\";\nimport { lightTheme, darkTheme } from \"../styles/theme\";\nimport { Global } from \"../styles/global\";\nimport Toggle from \"../styles/toggle\";\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useDarkMode = useDarkMode(),\n      _useDarkMode2 = _slicedToArray(_useDarkMode, 3),\n      theme = _useDarkMode2[0],\n      toggleTheme = _useDarkMode2[1],\n      componentMounted = _useDarkMode2[2];\n\n  var themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  if (!componentMounted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: themeMode,\n      children: [/*#__PURE__*/_jsxDEV(Global, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(Toggle, {\n          theme: theme,\n          toggleTheme: toggleTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MyApp, \"3MkFC+klXDGI1wV9Tur2tsqFgZg=\", false, function () {\n  return [useDarkMode];\n});\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/iankimble/Documents/BTP/btp_master_repo/btp.dev/pages/_app.js"],"names":["Layout","ThemeProvider","useDarkMode","lightTheme","darkTheme","Global","Toggle","MyApp","Component","pageProps","theme","toggleTheme","componentMounted","themeMode"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,iBAAtC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,qBACQP,WAAW,EADnB;AAAA;AAAA,MAChCQ,KADgC;AAAA,MACzBC,WADyB;AAAA,MACZC,gBADY;;AAGvC,MAAMC,SAAS,GAAGH,KAAK,KAAK,OAAV,GAAoBP,UAApB,GAAiCC,SAAnD;;AAEA,MAAI,CAACQ,gBAAL,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEC,SAAtB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEH,KAAf;AAAsB,UAAA,WAAW,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD;;GApBQF,K;UACwCL,W;;;KADxCK,K;AAsBT,eAAeA,KAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useDarkMode } from \"../darkMode\";\nimport { lightTheme, darkTheme } from \"../styles/theme\";\nimport { Global } from \"../styles/global\";\nimport Toggle from \"../styles/toggle\";\n\nfunction MyApp({ Component, pageProps }) {\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  if (!componentMounted) {\n    return <div />;\n  }\n\n  return (\n    <>\n      <ThemeProvider theme={themeMode}>\n        <Global />\n        <Layout>\n          <Toggle theme={theme} toggleTheme={toggleTheme} />\n          <Component {...pageProps} />\n        </Layout>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}