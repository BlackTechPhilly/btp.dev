{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport var useDarkMode = function useDarkMode() {\n  _s();\n\n  var _useState = useState(\"light\"),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  var toggleTheme = function toggleTheme() {\n    if (theme === \"light\") {\n      window.localStorage.setItem(\"theme\", \"dark\");\n      setTheme(\"dark\");\n    } else {\n      window.localStorage.setItem(\"theme\", \"light\");\n      setTheme(\"light\");\n    }\n  };\n\n  useEffect(function () {\n    var localTheme = window.localStorage.getItem(\"theme\");\n    localTheme && setTheme(localTheme);\n  }, []);\n  return [theme, toggleTheme];\n};\n\n_s(useDarkMode, \"lm84LOZxHN0YC4jzvAwAP/18Sno=\");","map":{"version":3,"sources":["C:/Users/Ian.Kimble/Documents/Greez_DID/practice21/btp/client/darkMode.js"],"names":["useEffect","useState","useDarkMode","theme","setTheme","toggleTheme","window","localStorage","setItem","localTheme","getItem"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,kBACLD,QAAQ,CAAC,OAAD,CADH;AAAA,MACxBE,KADwB;AAAA,MACjBC,QADiB;;AAE/B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBG,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,MAArC;AACAJ,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAHD,MAGO;AACLE,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,OAArC;AACAJ,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GARD;;AAUAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,UAAU,GAAGH,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,OAA5B,CAAnB;AACAD,IAAAA,UAAU,IAAIL,QAAQ,CAACK,UAAD,CAAtB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAO,CAACN,KAAD,EAAQE,WAAR,CAAP;AACD,CAlBM;;GAAMH,W","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      window.localStorage.setItem(\"theme\", \"dark\");\r\n      setTheme(\"dark\");\r\n    } else {\r\n      window.localStorage.setItem(\"theme\", \"light\");\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem(\"theme\");\r\n    localTheme && setTheme(localTheme);\r\n  }, []);\r\n\r\n  return [theme, toggleTheme];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}