{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport var useDarkMode = function useDarkMode() {\n  _s();\n\n  var _useState = useState(\"light\"),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  var _useState2 = useState(false),\n      componentMounted = _useState2[0],\n      setComponentMounted = _useState2[1];\n\n  var setMode = function setMode(mode) {\n    window.localStorage.setItem(\"theme\", mode);\n    setTheme(mode);\n  };\n\n  var toggleTheme = function toggleTheme() {\n    if (theme === \"light\") {\n      setMode(\"dark\");\n    } else {\n      setMode(\"light\");\n    }\n  };\n\n  useEffect(function () {\n    var localTheme = window.localStorage.getItem(\"theme\");\n\n    if (localTheme) {\n      setTheme(localTheme);\n    } else {\n      setMode(\"light\");\n    }\n\n    setComponentMounted(true);\n  }, []);\n  return [theme, toggleTheme, componentMounted];\n};\n\n_s(useDarkMode, \"dgkpbbICrStajK2xKUkrhynaXSw=\");","map":{"version":3,"sources":["C:/Users/Ian.Kimble/Documents/Greez_DID/practice21/btp/client/darkMode.js"],"names":["useEffect","useState","useDarkMode","theme","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","toggleTheme","localTheme","getItem"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,kBACLD,QAAQ,CAAC,OAAD,CADH;AAAA,MACxBE,KADwB;AAAA,MACjBC,QADiB;;AAAA,mBAEiBH,QAAQ,CAAC,KAAD,CAFzB;AAAA,MAExBI,gBAFwB;AAAA,MAENC,mBAFM;;AAI/B,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AACxBC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCH,IAArC;AACAJ,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,GAHD;;AAKA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIT,KAAK,KAAK,OAAd,EAAuB;AACrBI,MAAAA,OAAO,CAAC,MAAD,CAAP;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD;AACF,GAND;;AAQAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,UAAU,GAAGJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,OAA5B,CAAnB;;AACA,QAAID,UAAJ,EAAgB;AACdT,MAAAA,QAAQ,CAACS,UAAD,CAAR;AACD,KAFD,MAEO;AACLN,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD;;AACDD,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GARQ,EAQN,EARM,CAAT;AAUA,SAAO,CAACH,KAAD,EAAQS,WAAR,EAAqBP,gBAArB,CAAP;AACD,CA5BM;;GAAMH,W","sourcesContent":["import { useEffect, useState } from \"react\";\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [componentMounted, setComponentMounted] = useState(false);\r\n\r\n  const setMode = (mode) => {\r\n    window.localStorage.setItem(\"theme\", mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      setMode(\"dark\");\r\n    } else {\r\n      setMode(\"light\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem(\"theme\");\r\n    if (localTheme) {\r\n      setTheme(localTheme);\r\n    } else {\r\n      setMode(\"light\");\r\n    }\r\n    setComponentMounted(true);\r\n  }, []);\r\n\r\n  return [theme, toggleTheme, componentMounted];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}