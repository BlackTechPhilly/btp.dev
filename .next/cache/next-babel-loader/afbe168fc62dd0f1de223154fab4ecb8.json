{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ian.Kimble\\\\Documents\\\\Greez_DID\\\\practice21\\\\btp\\\\client\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"../styles/theme\";\nimport { Global } from \"../styles/global\";\nimport { Button } from \"react-bootstrap\";\nimport { useDarkMode } from \"../darkMode\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme === \"light\" ? lightTheme : darkTheme,\n      children: [/*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleTheme,\n          children: \"Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Global, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Ian.Kimble/Documents/Greez_DID/practice21/btp/client/pages/_app.js"],"names":["React","useState","Layout","ThemeProvider","lightTheme","darkTheme","Global","Button","useDarkMode","MyApp","Component","pageProps","theme","toggleTheme","themeMode"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,iBAAtC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBL,WAAW,EAAxC;AACA,QAAMM,SAAS,GAAGF,KAAK,KAAK,OAAV,GAAoBR,UAApB,GAAiCC,SAAnD;AAEA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEO,KAAK,KAAK,OAAV,GAAoBR,UAApB,GAAiCC,SAAvD;AAAA,8BACE,QAAC,MAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEQ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD;;AAED,eAAeF,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"../styles/theme\";\nimport { Global } from \"../styles/global\";\nimport { Button } from \"react-bootstrap\";\nimport { useDarkMode } from \"../darkMode\";\n\nfunction MyApp({ Component, pageProps }) {\n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  return (\n    <>\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n        <Layout>\n          <Button onClick={toggleTheme}>Toggle</Button>\n          <Component {...pageProps} />\n        </Layout>\n        <Global />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}